{"name": "test_update_project", "status": "failed", "statusDetails": {"message": "AssertionError: Error got: {'method': 'POST', 'url': '/projects/2330825388'}, expected {'method': 'POST', 'url': '/projects'}", "trace": "self = <test_projects.TestProjects object at 0x000001A05BB17470>, create_project = '2330825388', log_test_name = None\n\n    def test_update_project(self, create_project, log_test_name):\n        \"\"\"\n        Method to update a project\n        \"\"\"\n        id_project = create_project\n        LOGGER.debug(\"ID project to update: %s\", id_project)\n        url_todo_update = f\"{self.url_projects}/{id_project}\"\n        body_project = {\n            \"name\": \"Project updated from API\"\n        }\n        response = self.rest_client.request(method_name=\"post\", url=url_todo_update, body=body_project)\n        #add to a list of projects to be deleted\n        self.list_projects.append(id_project)\n>       self.validate.validate_response(response, endpoint=\"update_project\")\n\ntodo_api\\projects\\test_projects.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers\\validate_response.py:16: in validate_response\n    self.validate_values(expected_response[\"request\"], actual_response[\"request\"], key_compare=\"request\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <helpers.validate_response.ValidateResponse object at 0x000001A05BBA00E0>, expected_value = {'method': 'POST', 'url': '/projects'}\nactual_value = {'method': 'POST', 'url': '/projects/2330825388'}, key_compare = 'request'\n\n    def validate_values(self, expected_value, actual_value, key_compare):\n        \"\"\"\n        \"\"\"\n        error_message = f\"Error got: {actual_value}, expected {expected_value}\"\n        if key_compare == \"body\":\n            if isinstance(actual_value, list):\n                assert self.compare_json(expected_value[0], actual_value[0]), error_message\n            else:\n                assert self.compare_json(expected_value, actual_value), error_message\n        elif key_compare == \"headers\":\n            LOGGER.debug(\"Expected value: %s\", expected_value)\n            LOGGER.debug(\"Actual value: %s\", actual_value)\n            assert expected_value.items() <= actual_value.items(), error_message\n        # elif key_compare == \"request\":\n        #     LOGGER.debug(\"Expected value: %s\", expected_value)\n        #     LOGGER.debug(\"Actual value: %s\", actual_value)\n        #     assert expected_value.items() <= actual_value.items(), error_message\n        else:\n            LOGGER.debug(\"Expected status: %s\", expected_value)\n            LOGGER.debug(\"Actual status: %s\", actual_value)\n>           assert expected_value == actual_value, error_message\nE           AssertionError: Error got: {'method': 'POST', 'url': '/projects/2330825388'}, expected {'method': 'POST', 'url': '/projects'}\n\nhelpers\\validate_response.py:38: AssertionError"}, "description": "\n        Method to update a project\n        ", "start": 1711472934336, "stop": 1711472934799, "uuid": "9c001a6e-c9a1-46b0-8fb1-310543015e8c", "historyId": "5e2bd4e2573faff58095915e49e1bb66", "testCaseId": "5e2bd4e2573faff58095915e49e1bb66", "fullName": "todo_api.projects.test_projects.TestProjects#test_update_project", "labels": [{"name": "parentSuite", "value": "todo_api.projects"}, {"name": "suite", "value": "test_projects"}, {"name": "subSuite", "value": "TestProjects"}, {"name": "host", "value": "ctitoc-nh01"}, {"name": "thread", "value": "12804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "todo_api.projects.test_projects"}]}